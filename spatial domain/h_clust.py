# -*- coding: utf-8 -*-
"""H-clust.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/163vZnGlxPfKH_unfIvd9a8HicaGbIxmz
"""

#Importing Hierarchical Cluster Analysis libraries
from sklearn.cluster import AgglomerativeClustering

#Training the pca components of the data and adding to the dataset
cluster = AgglomerativeClustering(n_clusters=10, affinity='euclidean', linkage='ward')
adata.obs['hclust_10'] = cluster.fit_predict(X_pca).astype(str)

#Plotting the clusters of h-clust Algorithms
plt.rcParams["figure.figsize"] = (4, 4)
sc.pl.umap(adata, color=["total_counts", "n_genes_by_counts", "hclust_10"], wspace=0.4)

#With rc_context plotting the clustering of cells using hclust
with rc_context({'figure.figsize': (5, 5)}):
    sc.pl.umap(adata, color='hclust_10', add_outline=True, legend_loc='on data',
               legend_fontsize=12, legend_fontoutline=2,frameon=False,
               title='clustering of cells', palette='Set1')

#Creating new adata with the hclust clustering for marker genes
adata5 = adata

#Using the wilcoxon method and hclust finding out the marker genes from adata
sc.tl.rank_genes_groups(adata5, 'hclust_10', method='wilcoxon')

#Coverting the dataframe with matrices to find out the marker genes
resultsHC = adata5.uns['rank_genes_groups']
('0', '1', '2', '3', '4')

outHC = np.array([[0,0,0,0,0]])
for group in resultsHC['names'].dtype.names:
    outHC = np.vstack((outHC, np.vstack((resultsHC['names'][group],
                                     resultsHC['scores'][group],
                                     resultsHC['pvals_adj'][group],
                                     resultsHC['logfoldchanges'][group],
                                     np.array([group] * len(resultsHC['names'][group])).astype('object'))).T))



markersHC = pd.DataFrame(outHC[1:], columns = ['Gene', 'scores', 'pval_adj', 'lfc', 'cluster'])

markersHC = markersHC[(markersHC.pval_adj < 0.05) & (abs(markersHC.lfc) > 1)]

#Printing the marker genes from hclust
markersHC

#Checking the total number of marker genes per group using hclust
pd.DataFrame(adata5.uns['rank_genes_groups']['names']).head(20000)